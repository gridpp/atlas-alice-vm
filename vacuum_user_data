From nobody Fri Mar 25 20:22:40 2016
Content-Type: multipart/mixed; boundary="===============6970060383834158055=="
MIME-Version: 1.0
Comment: #  
 # Generic ATLAS Cloud Init user_data template file for use with Vacuum
 # based systems (Vac,Vcycle), and containing the following 
 # ##user_data___## substitutions: #  # user_data_option_cvmfs_proxy
 # user_data_space # 
 # Each substitution pattern may occur more than once in this template. If
 # you are reading a processed file, then these substitutions will already
 # have been made below. # 
 # This file should normally be processed by Vac (version 0.20.0 onwards) or
 # Vcycle (0.3.0 onwards) internally. # 
 # Andrew.McNab@cern.ch February 2016 # 

--===============6970060383834158055==
MIME-Version: 1.0
Content-Type: text/cloud-config; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="vacuum_cloud-config"

output: {all: '| tee -a /var/log/cloud-init-output.log'}
bootcmd:
  - hostname ##user_data_machine_hostname##
  - echo `hostname --all-ip-addresses` `hostname` >>/etc/hosts
  - mv -f /etc/sysconfig/condor /etc/sysconfig/condor-saved
  - echo 'exit 0'  > /etc/sysconfig/condor
  - dig TXT +short o-o.myaddr.l.google.com @ns.google.com  | tr -d '"' > /var/cache/public_address || echo 0.0.0.0 > /var/cache/public_address || echo 0.0.0.0
  - mkdir /scratch && chmod ugo+rwxt /scratch && mkfs -q -t ext4 /dev/vda2 && mount /dev/vda2 /scratch
  - fallocate -l 8G /mnt/.rw/swapfile
  - chmod 0600 /mnt/.rw/swapfile
  - mkswap /mnt/.rw/swapfile
  - swapon /mnt/.rw/swapfile
  - sysctl vm.swappiness=1
ganglia:
    globals:
        override_hostname: ##user_data_machine_hostname##
        send_metadata_interval: 45
    cluster: 
        name: '"##user_data_option_queue##"'
    udp_send_channel:
        host: agm.cern.ch
        port: AGM_PORT_NUMBER
cvmfs:
    local:
        CVMFS_CACHE_BASE: /mnt/.rw/cvmfs-cache
        CVMFS_QUOTA_LIMIT: 7000
        CVMFS_REPOSITORIES: grid,atlas
        CVMFS_HTTP_PROXY: ##user_data_option_cvmfs_proxy##
condor:
  HOSTNAME: ##user_data_machine_hostname##
  CONDOR_HOST: aipanda138.cern.ch
  COLLECTOR_HOST: aipanda138.cern.ch:20618
  CONDOR_IDS: 496.493
  CLAIM_WORKLIFE: 0
  CONDOR_ADMIN: root@aipanda138.cern.ch:20618
  DEDICATED_EXECUTE_ACCOUNT_REGEXP: cuser[0-9]+
  JAVA: /usr/lib/jvm/jre-1.6.0-openjdk.x86_64/bin/java
  USER_JOB_WRAPPER: /usr/local/bin/lcg-atlas
  GSITE: '"##user_data_option_queue##"'
  STARTD_ATTRS: GSITE
  ENABLE_SSH_TO_JOB: True
  CERTIFICATE_MAPFILE: /etc/condor/canonical_map
  ALLOW_DAEMON: 127.0.0.1, IPADDRESS, aipanda136.cern.ch, aipanda130.cern.ch, aipanda132.cern.ch, aipanda135.cern.ch, aipanda138.cern.ch
  HOSTALLOW_DAEMON: IPADDRESS, aipanda136.cern.ch, aipanda130.cern.ch, aipanda132.cern.ch, aipanda135.cern.ch, aipanda138.cern.ch
  EXECUTE: /scratch/condor
  MASTER_DEBUG: D_FULLDEBUG
  STARTER_DEBUG: D_FULLDEBUG
  STARTD_DEBUG: D_FULLDEBUG
  SEC_DEFAULT_AUTHENTICATION: REQUIRED
  SEC_DEFAULT_AUTHENTICATION_METHODS: PASSWORD, GSI
  SEC_PASSWORD_FILE: /root/pool_password
  GSI_DELEGATION_KEYBITS: 1024
  GSI_DAEMON_DIRECTORY: /etc/grid-security
  GSI_DAEMON_TRUSTED_CA_DIR: /etc/grid-security/certificates/
  GSI_DAEMON_CERT: /tmp/x509proxy.pem
  GSI_DAEMON_KEY: /tmp/x509proxy.pem
  UPDATE_COLLECTOR_WITH_TCP: True
  MAXJOBRETIREMENTTIME: 48*3600
  STARTD_CRON_JOBLIST: $(STARTD_CRON_JOBLIST) atlval
  STARTD_CRON_ATLVAL_MODE: Periodic
  STARTD_CRON_ATLVAL_EXECUTABLE: /usr/libexec/atlval.sh
  STARTD_CRON_ATLVAL_PERIOD: 60s
  STARTD_CRON_ATLVAL_JOB_LOAD: 0.1
  UPDATE_INTERVAL: 60
  MASTER_UPDATE_INTERVAL: 60
  NUM_SLOTS: 1
  SLOT1_USER: cuser1
  PRIVATE_NETWORK_INTERFACE: IPADDRESS
  PRIVATE_NETWORK_NAME: ##user_data_manager_hostname##
  CCB_ADDRESS: $(COLLECTOR_HOST)
  CCB_HEARTBEAT_INTERVAL: 120
  HIGHPORT: 25000
  STARTD_NOCLAIM_SHUTDOWN: 600
runcmd:
  - mkdir -p /scratch/condor/
  - chown condor:condor /scratch/condor/
  - echo 'cuser1 ALL=(ALL) NOPASSWD:/sbin/shutdown' >> /etc/sudoers
write_files:
  - owner: root:root
    path: /root/pool_password_option
    permissions: '0644'
    encoding: b64
    content: ##user_data_option_pool_password##
  - owner: root:root
    path: /etc/condor/canonical_map
    permissions: '0644'
    content: |
        PASSWORD (.*) cuser1
        GSI (.*) cuser1
        SSL (.*) cuser1
  - owner: root:root
    path: /usr/local/bin/lcg-atlas
    permissions: '0755'
    content: |
        #!/bin/bash

        export HOME=$(pwd)
        export USER=$(whoami)
        source /cvmfs/grid.cern.ch/emi3wn-latest/etc/profile.d/a1_grid_env.sh
        source /cvmfs/grid.cern.ch/emi3wn-latest/etc/profile.d/setup-wn-example.sh
        export VO_ATLAS_SW_DIR=/cvmfs/atlas.cern.ch/repo/sw
        export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
        source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh --quiet
        ATLAS_LOCAL_CERNROOT_VERSION=$(readlink ${ATLAS_LOCAL_ROOT}/root/current-SL6)
        ROOT=${ATLAS_LOCAL_ROOT}/root/${ATLAS_LOCAL_CERNROOT_VERSION}
        XROOTD_VERSION=$(${ROOT}/bin/root-config --config | sed 's#.*xrootd/\([^/]*\).*#\1#g')
        VERSION=$(${ATLAS_LOCAL_ROOT_BASE}/utilities/fetchVersions.sh --name=xrootd --followSL --format=bareList | grep ${XROOTD_VERSION}-x86_64-slc6)
        source ${ROOT}/bin/setxrd.sh ${ATLAS_LOCAL_ROOT}/xrootd/${VERSION}/v${XROOTD_VERSION}
        curl 'http://bigpanda.cern.ch/jobs/?computingsite=##user_data_option_queue##' >/var/spool/joboutputs/`pwd|sed 's:^.*/::'`.jobs.html

        $* | tee /var/spool/joboutputs/`pwd|sed 's:^.*/::'`.condor.stdout

  - owner: root:root
    path: /usr/libexec/atlval.sh
    permissions: '0755'
    content: |
        #!/bin/bash
        # Anything printed out is interpreted as a classad attribute
        # and can be used in the START expression
         
        result=True
         
        ls /cvmfs/atlas.cern.ch/repo/sw &> /dev/null
        if [ $? -ne 0 ];then
        result=False
        fi
         
        grep CVMFS_CACHE_BASE /etc/cvmfs/default.local &> /dev/null
        if [ $? -ne 0 ];then
           result=False
        fi
         
        echo ATLAS_VALID = $result

--===============6970060383834158055==
MIME-Version: 1.0
Content-Type: text/ucernvm; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="vacuum_ucernvm"

[ucernvm-begin]
resize_rootfs=off
cvmfs_http_proxy='##user_data_option_cvmfs_proxy##'
[ucernvm-end]

--===============6970060383834158055==
MIME-Version: 1.0
Content-Type: text/x-shellscript; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="vacuum_shellscript"

#!/bin/sh
if [ "$1" == "stop" ] ; then exit; fi 

mkdir -p /var/spool/joboutputs
chmod ugo+rwxt /var/spool/joboutputs/

(
cat <<EOF >/tmp/x509proxy.pem
##user_data_option_x509_proxy##
##user_data_file_hostcert##
##user_data_file_hostkey##
EOF
chown root.root /tmp/x509proxy.pem
chmod 0400 /tmp/x509proxy.pem

curl --capath /etc/grid-security/certificates/ --cert /tmp/x509proxy.pem --key /tmp/x509proxy.pem https://depo.gridpp.ac.uk/pool-password.cgi | base64 -d >/root/pool_password

# Start condor with proper config and pool_password file
mv -f /etc/sysconfig/condor-saved /etc/sysconfig/condor
service condor restart

# Put site/queue specific port number into Ganglia configuration
AGMPORT=`python -c "import requests ; print requests.get('http://agm.cern.ch/gmond-cluster-cfg.json', timeout=60).json()['##user_data_option_queue##']['Port']"`
if [ $? = 0 -a "$AGMPORT" != "" ] ; then
  sed -i "s/AGM_PORT_NUMBER/$AGMPORT/" /etc/ganglia/gmond.conf
  service gmond restart
else
  # Just in case
  service gmond stop
fi

# Send a heartbeat every 5 minutes
(
while true
do
  echo `cut -f1-3 -d' ' /proc/loadavg` `cat /proc/uptime` >/var/spool/joboutputs/heartbeat
  date --utc +"%Y-%m-%d %H:%M:%S %Z Uploading heartbeat"
  /usr/bin/curl --max-time 30 --location --upload-file /var/spool/joboutputs/heartbeat '##user_data_joboutputs_url##/vm-heartbeat'
  /usr/bin/curl --max-time 30 --location --upload-file /var/spool/joboutputs/heartbeat '##user_data_joboutputs_url##/heartbeat'
  date --utc +"%Y-%m-%d %H:%M:%S %Z curl returns $?"
  sleep 300
done
) >/var/log/heartbeat.log 2>&1 &

# Record Condor configuration
condor_config_val -dump >/var/spool/joboutputs/condor_config_val-dump.log

# Give Condor 10 minutes to have find a job, then shutdown whenever it finishes (or now)
(sleep 1800 ; condor_off -peaceful) &

while true
do
  # If condor is running, then go round again after a minute
  if ps -C condor_startd ; then sleep 60 ; continue ; fi
  
  grep 'Inside OsProc::JobExit' /var/log/condor/StarterLog >/dev/null 2>/dev/null
  if [ $? != 0 ] ; then
    echo '300 No HTCondor job to run' > /var/spool/joboutputs/shutdown_message
  else
    grep 'Dispatcher response.*PandaID' /var/spool/joboutputs/*.condor.stdout >/dev/null 2>/dev/null 
    if [ $? != 0 ] ; then
      echo '300 No PanDA job to run' > /var/spool/joboutputs/shutdown_message
    else
      echo '200 Success' > /var/spool/joboutputs/shutdown_message 
    fi
  fi
  
  # Time to upload and shutdown
  cd /var/spool/joboutputs
  cp -f /var/log/condor/* /var/log/cloud-init*.log .
  export certHostname=`openssl x509 -in /tmp/x509proxy.pem -subject -noout | sed 's:.*/CN=\([a-z0-9.-]*\).*:\1:'`
  for i in * ; do curl --location --upload-file "$i" '##user_data_joboutputs_url##/' ; curl --capath /etc/grid-security/certificates/ --cert /tmp/x509proxy.pem --key /tmp/x509proxy.pem --location --upload-file "$i" "https://depo.gridpp.ac.uk/$certHostname/atlas/##user_data_space##/$HOSTNAME/##user_data_uuid##/" ; done

  # Try normal shutdown
  shutdown -h now
  sleep 60
  # Otherwise instant shutdown
  echo o > /proc/sysrq-trigger
done

) >/var/spool/joboutputs/shellscript.log 2>&1 &

--===============6970060383834158055==--

